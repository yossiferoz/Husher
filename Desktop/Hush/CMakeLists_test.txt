cmake_minimum_required(VERSION 3.20)
project(KhDetector VERSION 1.0.0)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Set default build type
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Debug)
endif()

# Audio processing options
option(DECIM_FACTOR "Decimation factor for downsampling (default: 3 for 48kHz->16kHz)" 3)
add_compile_definitions(DECIM_FACTOR=${DECIM_FACTOR})

# Platform-specific settings
if(APPLE)
    set(CMAKE_OSX_ARCHITECTURES "x86_64;arm64")
    set(CMAKE_OSX_DEPLOYMENT_TARGET "10.13")
endif()

# Option to build tests
option(BUILD_TESTS "Build unit tests" ON)

# GoogleTest setup
if(BUILD_TESTS)
    include(FetchContent)
    FetchContent_Declare(
        googletest
        URL https://github.com/google/googletest/archive/03597a01ee50f33f9142bf5fa5b06d5f2f9f7d7c.zip
        DOWNLOAD_EXTRACT_TIMESTAMP ON
    )
    # For Windows: Prevent overriding the parent project's compiler/linker settings
    set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
    FetchContent_MakeAvailable(googletest)
    
    # Enable testing
    enable_testing()
    
    # Add test executable
    add_executable(
        KhDetectorTests
        tests/test_ringbuffer.cpp
        tests/test_decimator.cpp
        tests/test_threadpool.cpp
        tests/test_postprocessor.cpp
        tests/test_midieventhandler.cpp
        tests/test_openglgui.cpp
        src/RealtimeThreadPool.cpp
        src/AiInference.cpp
        src/PostProcessor.cpp
        src/MidiEventHandler.cpp
        src/KhDetectorOpenGLView.cpp
        src/KhDetectorGUIView.cpp
        src/KhDetectorEditor.cpp
    )
    
    # Include directories for tests
    target_include_directories(KhDetectorTests PRIVATE
        src
        external/vst3sdk
        external/vst3sdk/pluginterfaces
        external/vst3sdk/public.sdk
        external/vst3sdk/base
        external/vstgui
        external/vstgui/vstgui
    )
    
    # Find threading library
    find_package(Threads REQUIRED)
    
    # Find OpenGL
    find_package(OpenGL REQUIRED)
    
    # Link test executable with GoogleTest
    target_link_libraries(
        KhDetectorTests
        gtest_main
        gtest
        Threads::Threads  # Required for threading tests
        OpenGL::GL
    )
    
    # Platform-specific OpenGL and GUI libraries for tests
    if(APPLE)
        find_library(COCOA_LIBRARY Cocoa)
        find_library(OPENGL_LIBRARY OpenGL)
        target_link_libraries(KhDetectorTests ${COCOA_LIBRARY} ${OPENGL_LIBRARY})
    elseif(WIN32)
        target_link_libraries(KhDetectorTests opengl32 gdi32)
    else()
        find_package(PkgConfig REQUIRED)
        pkg_check_modules(GTK3 REQUIRED gtk+-3.0)
        target_link_libraries(KhDetectorTests ${GTK3_LIBRARIES} GL)
        target_include_directories(KhDetectorTests PRIVATE ${GTK3_INCLUDE_DIRS})
    endif()
    
    # Compiler settings for tests
    target_compile_features(KhDetectorTests PRIVATE cxx_std_17)
    
    if(MSVC)
        target_compile_options(KhDetectorTests PRIVATE /W4)
        target_compile_definitions(KhDetectorTests PRIVATE
            WIN32_LEAN_AND_MEAN
            NOMINMAX
        )
    else()
        target_compile_options(KhDetectorTests PRIVATE -Wall -Wextra -Wpedantic)
    endif()
    
    # Register tests with CTest
    include(GoogleTest)
    gtest_discover_tests(KhDetectorTests)
    
    # Custom test target for convenience
    add_custom_target(run_tests
        COMMAND ${CMAKE_CTEST_COMMAND} --verbose
        DEPENDS KhDetectorTests
        COMMENT "Running unit tests"
    )
endif()

# Add example executables for demonstration
add_executable(opengl_gui_demo
    examples/opengl_gui_demo.cpp
    src/KhDetectorOpenGLView.cpp
    src/KhDetectorGUIView.cpp
)

target_include_directories(opengl_gui_demo PRIVATE
    src
    external/vstgui
    external/vstgui/vstgui
)

find_package(OpenGL REQUIRED)
target_link_libraries(opengl_gui_demo OpenGL::GL)

if(APPLE)
    find_library(COCOA_LIBRARY Cocoa)
    find_library(OPENGL_LIBRARY OpenGL)
    target_link_libraries(opengl_gui_demo ${COCOA_LIBRARY} ${OPENGL_LIBRARY})
elseif(WIN32)
    target_link_libraries(opengl_gui_demo opengl32 gdi32)
else()
    find_package(PkgConfig REQUIRED)
    pkg_check_modules(GTK3 REQUIRED gtk+-3.0)
    target_link_libraries(opengl_gui_demo ${GTK3_LIBRARIES} GL)
    target_include_directories(opengl_gui_demo PRIVATE ${GTK3_INCLUDE_DIRS})
endif()

target_compile_features(opengl_gui_demo PRIVATE cxx_std_17)

if(MSVC)
    target_compile_options(opengl_gui_demo PRIVATE /W4)
    target_compile_definitions(opengl_gui_demo PRIVATE
        WIN32_LEAN_AND_MEAN
        NOMINMAX
    )
else()
    target_compile_options(opengl_gui_demo PRIVATE -Wall -Wextra -Wpedantic)
endif()

message(STATUS "KhDetector simplified build configured")
message(STATUS "  Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "  Decimation factor: ${DECIM_FACTOR}")
message(STATUS "  Build tests: ${BUILD_TESTS}")
message(STATUS "  Platform: ${CMAKE_SYSTEM_NAME}")

if(BUILD_TESTS)
    message(STATUS "")
    message(STATUS "To build and run tests:")
    message(STATUS "  cmake --build build --target KhDetectorTests")
    message(STATUS "  cd build && ctest --verbose")
    message(STATUS "")
    message(STATUS "To run OpenGL GUI demo:")
    message(STATUS "  cmake --build build --target opengl_gui_demo")
    message(STATUS "  ./build/opengl_gui_demo")
endif() 